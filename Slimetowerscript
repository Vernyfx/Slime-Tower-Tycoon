local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({Name = "VernyHUB", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]


local Main = Window:MakeTab({
	Name = "AutoFarm",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]


Main:AddToggle({
	Name = "AutoBuyDropper1X",
	Default = false,
	Callback = function(Value)
		_G.autobuydrop = Value;
task.spawn(function()
    while _G.autobuydrop do
local args = {
    [1] = 1
}
game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuyDropper:FireServer(unpack(args))
wait(0.3)
    end
end)
	end    
})

Main:AddToggle({
	Name = "AutoBuyDropper5X",
	Default = false,
	Callback = function(Value)
		_G.autobuydrop = Value;
task.spawn(function()
    while _G.autobuydrop do
local args = {
    [1] = 5
}
game:GetService("ReplicatedStorage").GTycoonClient.Remotes.BuyDropper:FireServer(unpack(args))
wait(0.3)
    end
end)
	end    
})


Main:AddToggle({
	Name = "AutoDeposit",
	Default = false,
	Callback = function(Value)
		_G.autodeposit = Value;

task.spawn(function()
    while _G.autodeposit do
game:GetService("ReplicatedStorage").GTycoonClient.Remotes.DepositDrops:FireServer()
wait(0.9)
    end
end)

	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]

Main:AddToggle({
	Name = "AutoMerge",
	Default = false,
	Callback = function(Value)
		_G.automerg = Value;

task.spawn(function()
    while _G.automerg do
game:GetService("ReplicatedStorage").GTycoonClient.Remotes.MergeDroppers:FireServer()
wait(1.5)
    end
end)
	end    
})

--[[
Name = <string> - The name of the toggle.
Default = <bool> - The default value of the toggle.
Callback = <function> - The function of the toggle.
]]








Main:AddSlider({
	Name = "Change WalkSpeed",
	Min = 30,
	Max = 300,
	Default = 30,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "WalkSpeed",
	Callback = function(wS)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = wS
	end    
})


